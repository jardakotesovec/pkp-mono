
swagger: '2.0'
info:
  version: '1.0'
  title: Open Journal Systems API
  description: API to interact with Open Journal Systems
  contact:
    name: Public Knowledge Project
    url: 'http://pkp.sfu.ca'
produces:
  - application/json
securityDefinitions:
  ApiTokenQueryParam:
    type: apiKey
    in: query
    name: apiToken
security:
  - ApiTokenQueryParam: []
host: localhost:8000
basePath: /index.php/publicknowledge/api/v1
schemes:
  - http
  - https
tags:
  - name: "Submissions"
  - name: "Issues"
  - name: "Backend"
    description: "Private endpoints for OJS UI."
definitions:
  Submission:
    type: object
    properties:
      id:
        type: integer
      issueId:
        type: integer
      sectionId:
        type: integer
      title:
        $ref: '#/definitions/LocaleObject'
      subtitle:
        $ref: '#/definitions/LocaleObject'
      fullTitle:
        $ref: '#/definitions/LocaleObject'
      prefix:
        $ref: '#/definitions/LocaleObject'
      authorString:
        type: string
      shortAuthorString:
        type: string
      authors:
        type: array
        items:
          $ref: '#/definitions/Author'
      abstract:
        $ref: '#/definitions/LocaleObject'
      discipline:
        $ref: '#/definitions/LocaleObject'
      subject:
        $ref: '#/definitions/LocaleObject'
      type:
        $ref: '#/definitions/LocaleObject'
      language:
        type: string
      sponsor:
        $ref: '#/definitions/LocaleObject'
      pages:
        type: array
        items:
          type: object
          properties:
            0:
              type: string
            1:
              type: string
      copyrightHolder:
        $ref: '#/definitions/LocaleObject'
      copyrightYear:
        type: string
      licenseUrl:
        type: string
      locale:
        type: string
      dateSubmitted:
        type: string
      dateStatusModified:
        type: string
      lastModified:
        type: string
      datePublished:
        type: string
      status:
        type: object
        properties:
          id:
            type: integer
          label:
            type: string
      submissionProgress:
        type: integer
      stages:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            label:
              type: string
            isActiveStage:
              type: boolean
            # @TODO Consider queries/files information to return
            # queries:
            #   type: array
            #   items:
            #     $ref: '#/definitions/Query'
            # files:
            #   type: array
            #   items:
            #     $ref: '#/definitions/File'
      reviewRounds:
        type: array
        items:
          $ref: '#/definitions/ReviewRound'
      reviewAssignments:
        type: array
        items:
          $ref: '#/definitions/ReviewAssignment'
      urlWorkflow:
        type: string
      urlPublished:
        type: string
      galleys:
        type: array
        items:
          $ref: '#/definitions/Galley'
      doi:
        type: string
  SubmissionSummary:
    type: object
    properties:
      id:
        type: integer
      _href:
        type: string
      issueId:
        type: integer
      sectionId:
        type: integer
      title:
        $ref: '#/definitions/LocaleObject'
      subtitle:
        $ref: '#/definitions/LocaleObject'
      fullTitle:
        $ref: '#/definitions/LocaleObject'
      prefix:
        $ref: '#/definitions/LocaleObject'
      authorString:
        type: string
      shortAuthorString:
        type: string
      authorIds:
        type: array
        items:
          type: integer
      abstract:
        $ref: '#/definitions/LocaleObject'
      language:
        type: string
      pages:
        type: array
        items:
          type: object
          properties:
            0:
              type: string
            1:
              type: string
      datePublished:
        type: string
      status:
        type: object
        properties:
          id:
            type: integer
          label:
            type: string
      submissionProgress:
        type: integer
      urlWorkflow:
        type: string
      urlPublished:
        type: string
      galleyIds:
        type: array
        items:
          type: integer
      doi:
        type: string
  Author:
    type: object
    properties:
      id:
        type: integer
      seq:
        type: integer
      firstName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      suffix:
        type: string
      country:
        type: string
      email:
        type: string
      url:
        type: string
      userGroupId:
        type: string
      isBrowseable:
        type: boolean
      isPrimaryContact:
        type: boolean
      affiliation:
        $ref: '#/definitions/LocaleObject'
      biography:
        $ref: '#/definitions/LocaleObject'
      orcid:
        type: string
  Galley:
    type: object
    properties:
      id:
        type: integer
      parent:
        type: string
      locale:
        type: string
      label:
        type: string
      seq:
        type: integer
      remoteUrl:
        type: string
      publishedUrl:
        type: string
      file:
        $ref: '#/definitions/File'
  File:
    type: object
    properties:
      id:
        type: integer
      revision:
        type: integer
      submissionId:
        type: integer
      fileStage:
        type: integer
      fileName:
        $ref: '#/definitions/LocaleObject'
      downloadUrl:
        type: string
      metadata:
        type: object
        properties:
          description:
            $ref: '#/definitions/LocaleObject'
          creator:
            $ref: '#/definitions/LocaleObject'
          publisher:
            $ref: '#/definitions/LocaleObject'
          source:
            $ref: '#/definitions/LocaleObject'
          subject:
            $ref: '#/definitions/LocaleObject'
          sponsor:
            $ref: '#/definitions/LocaleObject'
          date:
            type: string
          language:
            type: string
  Issue:
    type: object
    properties:
      id:
        type: integer
      title:
        $ref: '#/definitions/LocaleObject'
      description:
        $ref: '#/definitions/LocaleObject'
      identification:
        type: string
      volume:
        type: integer
      number:
        type: integer
      year:
        type: integer
      isPublished:
        type: boolean
      isCurrent:
        type: boolean
      datePublished:
        type: string
      dateNotified:
        type: string
      lastModified:
        type: string
      doi:
        type: string
      coverImageUrl:
        $ref: '#/definitions/LocaleObject'
      coverImageAltText:
        $ref: '#/definitions/LocaleObject'
      publishedUrl:
        type: string
      articles:
        type: array
        items:
          $ref: '#/definitions/SubmissionSummary'
      sections:
        type: array
        items:
          $ref: '#/definitions/SectionSummary'
      tableOfContents:
        type: array
        items:
          type: object
          example:
            sectionId: 1
            articles:
              type: array
              items:
                type: integer
      galleys:
        type: array
        items:
          $ref: '#/definitions/Galley'
  SectionSummary:
    type: object
    properties:
      id:
        type: integer
      abbrev:
        $ref: '#/definitions/LocaleObject'
      title:
        $ref: '#/definitions/LocaleObject'
      sequence:
        type: integer
  ReviewRound:
    type: object
    properties:
      id:
        type: integer
      round:
        type: integer
      stageId:
        type: integer
      statusId:
        type: integer
      status:
        type: string
  ReviewAssignment:
    type: object
    properties:
      id:
        type: integer
      assignedUserId:
        type: integer
      isCurrentUserAssigned:
        type: boolean
      statusId:
        type: integer
      status:
        type: string
      due:
        type: string
      responseDue:
        type: string
      round:
        type: integer
      roundId:
        type: integer
  LocaleObject:
    type: object
    description: Key/value pairs containing strings by locale key.
    example:
      en_US: Filename
      fr_CA: Nom de fichier
  ErrorResponse:
    type: object
    description: A response object that will be returned when the request could not be fulfilled.
    properties:
      error:
        type: string
      errorMessage:
        type: string
paths:
  '/submissions':
    get:
      tags:
        - Submissions
      summary: Get a list of submissions.
      description: |
        **OJS 3.1 Target**:
          * See `/submissions/{submissionId}`.
          * Support `count` and `offset` parameters.
          * Support `assignedTo` parameters if time permits. Otherwise restrict access to managers and admins.
      parameters:
        - name: status
          description: Filter results by submission status. Pass more than one status in a comma-separated list (eg - `3,4`). Must match the value of the `STATUS_QUEUED`, `STATUS_PUBLISHED` or `STATUS_DECLINED` constants in OJS 3.
          in: query
          required: false
          type: string
        - name: assignedTo
          description: Filter results by those assigned to this user ID. All users except managers and admins are automatically restricted to assigned submissions and do not need to pass this parameter.
          in: query
          required: false
          type: integer
        - name: count
          description: How many results to return in a single request. Default is `20`. Max is `100`.
          in: query
          required: false
          type: integer
        - name: offset
          description: Offset the results returned. Use this to receive subsequent pages of requests. A `count` of `10` and `offset` of `15` will return results `15` to `25`.
          in: query
          required: false
          type: integer
        - name: orderBy
          description: Order the results returned. Must be one of `dateSubmitted`, `lastModified` or `title`. Default is `dateSubmitted`.
          in: query
          required: false
          type: string
        - name: orderDirection
          description: Return the results in ascending or descending order. Must be `ASC` or `DESC`. Default is `DESC`.
          in: query
          required: false
          type: string
        - name: sectionIds
          description: Filter the results by those assigned to a section.
          in: query
          required: false
          type: string
        - name: searchPhrase
          description: Filter the results by a search phrase matched against the title and authors.
          in: query
          required: false
          type: string
      responses:
        '200':
          description: List of submissions.
          schema:
            type: array
            items:
              $ref: '#/definitions/Submission'
        '403':
          description: You do not have permission to access submissions assigned to the user requested in the `assignedTo` parameter.
          schema:
            $ref: '#/definitions/ErrorResponse'

  '/submissions/{submissionId}':
    get:
      tags:
        - Submissions
      summary: Get a submission by ID.
      description: |
        **OJS 3.1 Target**:
          * All keys except `stages`, `reviewRounds` and `reviewAssignments`

        **Additional notes**:
          * Unpublished submissions should only be returned for assigned participants, editors and admins.
          * `abstract` includes HTML markup.
          * `pages` is an array of arrays. Each array contains two items: the start and end page. Example: `[[25, 31], [45, 62]]`. It is possible to have multiple page sets (eg - 21-32, 36-40), but may be very uncommon.
          * `submissionProgress` will be > 0 if the submission is incomplete.
          * `stages`, `reviewRounds` and `reviewAssignments` should only be returned for participants assigned to the submission.
          * `reviewAssignments` should only expose user-identifying information for editors and admins.
      parameters:
        - name: submissionId
          in: path
          description: Submission ID
          required: true
          type: integer
      responses:
        '200':
          description: Submission details.
          schema:
            $ref: '#/definitions/Submission'
        '403':
          description: You do not have permission to access this submission.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Requested submission could not be found
          schema:
            $ref: '#/definitions/ErrorResponse'

  '/submissions/{submissionId}/galleys':
    get:
      tags:
        - Submissions
      summary: Get submission galleys.
      description: |
        **OJS 3.1 Target**:
          - All keys except `file`.

        **Additional Notes**:
          - `parent` will return the API URL representing the associated submission.
          - `publishedUrl` will point to the frontend galley view for published submissions. It is empty for unpublished submissions.
      parameters:
        - name: submissionId
          in: path
          description: Submission ID
          required: true
          type: integer
      responses:
        '200':
          description: Array of galleys.
          schema:
            type: array
            items:
              $ref: '#/definitions/Galley'
        '403':
          description: You do not have permission to access this submission.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Requested submission could not be found.
          schema:
            $ref: '#/definitions/ErrorResponse'

  '/issues':
    get:
      tags:
        - Issues
      summary: Get a list of issues.
      description: |
        **OJS 3.1 Target**:
          * See `/issues/{issueId}`.
      parameters:
        - name: isPublished
          description: Filter returned issues by those that have been published.
          in: query
          required: false
          type: boolean
        - name: volume
          description: Filter returned issues by those in a specific volume.
          in: query
          required: false
          type: integer
        - name: number
          description: Filter returned issues by those assigned a specific number.
          in: query
          required: false
          type: integer
        - name: year
          description: Filter returned issues by those in a specific year.
          in: query
          required: false
          type: integer
      responses:
        '200':
          description: List of issues.
          schema:
            type: array
            items:
              $ref: '#/definitions/Issue'
        '400':
          description: The requested volume, number or year is not valid.
          schema:
            $ref: '#/definitions/ErrorResponse'

  '/issues/current':
    get:
      tags:
        - Issues
      summary: Get the current issue.
      description: |
        **OJS 3.1 Target**
          * See '/issues/{issueId}'
      responses:
        '200':
          description: The current issue.
          schema:
            $ref: '#/definitions/Issue'
        '404':
          description: This journal does not have a current issue.
          schema:
            $ref: '#/definitions/ErrorResponse'

  '/issues/{issueId}':
    get:
      tags:
        - Issues
      summary: Get an issue by ID.
      description: |
        **OJS 3.1 Target**:
          - Complete.

        **Additional Notes**:
          - `description` will include HTML
      parameters:
        - name: issueId
          description: Issue ID
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: Issue details.
          schema:
            $ref: '#/definitions/Issue'

  '/issues/{issueId}/galleys':
    get:
      tags:
        - Issues
      summary: Get issue galleys.
      description: |
        **OJS 3.1 Target**:
          - All keys except `file`.

        **Additional Notes**:
          - `parent` will return the API URL representing the associated issue.
          - `publishedUrl` will point to the frontend galley view for published issues. It is empty for unpublished issues.
      parameters:
        - name: issueId
          in: path
          description: Issue ID
          required: true
          type: integer
      responses:
        '200':
          description: Array of galleys.
          schema:
            type: array
            items:
              $ref: '#/definitions/Galley'
        '403':
          description: You do not have permission to access this issue.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Requested issue could not be found.
          schema:
            $ref: '#/definitions/ErrorResponse'

  '/_submissions':
    get:
      tags:
        - Backend
      summary: Submission list
      description: |
        Retrieve submission list
      parameters:
        - name: orderColumn
          in: query
          description: Field to order by
          required: false
          type: string
          default: id
        - name: orderDirection
          in: query
          description: Order direction
          required: false
          type: string
          default: 'DESC'
        - name: assignedTo
          in: query
          description: Assignee user ID
          required: false
          type: integer
        - name: statuses
          in: query
          description: Status list
          required: false
          type: array
          items:
            type: integer
        - name: searchPhrase
          in: query
          description: Search phrase
          required: false
          type: string
        - name: count
          in: query
          description: Number of submission to return
          required: false
          type: integer
        - name: page
          in: query
          description: Page number for pagination
          required: false
          type: integer
      responses:
        '200':
          description: array of submissions
