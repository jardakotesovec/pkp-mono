
swagger: '2.0'
info:
  version: '1.0'
  title: Open Journal Systems API
  description: API to interact with Open Journal Systems
  contact:
    name: Public Knowledge Project
    url: 'http://pkp.sfu.ca'
produces:
  - application/json
securityDefinitions:
  ApiTokenQueryParam:
    type: apiKey
    in: query
    name: apiToken
security:
  - ApiTokenQueryParam: []
host: localhost:8000
basePath: /index.php/publicknowledge/api/v1
schemes:
  - http
  - https
tags:
  - name: "Submissions"
    description: "It's all about submissions"
  - name: "Files"
    description: "Submission files"
  - name: "Galleys"
    description: "Submission galleys"
  - name: "Issues"
    description: "Issue listing"
  - name: "Articles"
    description: "Published articles"
  - name: "Backend"
    description: "OJS UI sustaining endpoints"
definitions:
  Author:
    type: object
    properties:
      name:
        type: string
      affiliation:
        type: string
      orcid:
        type: string
  GalleyInSubmission:
    type: object
    properties:
      id:
        type: string
      label:
        type: string
      filetype:
        type: string
      url:
        type: string
  Galley:
    type: object
    properties:
      id:
        type: string
      submissionId:
        type: string
      locale:
        type: string
      label:
        type: string
      seq:
        type: string
      remoteUrl:
        type: string
      fileId:
        type: string
      revision:
        type: integer
      fileType:
        type: string
  File:
    type: object
    properties:
      fileId:
        type: integer
      revision:
        type: integer
      submissionId:
        type: integer
      fileName:
        type: object
        $ref: '#/definitions/LocaleObject'
      fileLabel:
        type: string
      fileStage:
        type: integer
      uploaderUserId:
        type: integer
      userGroupId:
        type: integer
      metadata:
        type: object
  User:
    type: object
    properties:
      roleId:
        type: string
      roleName:
        type: string
      userId:
        type: string
      userFullName:
        type: string
  LocaleObject:
    type: object
    description: Key/value pairs containing strings by locale key.
    example:
      en_US: Filename
      fr_CA: Nom de fichier
  ErrorResponse:
    type: object
    description: A response object that will be returned when the request could not be fulfilled.
    properties:
      error:
        type: string
      errorMessage:
        type: string
paths:
  '/submissions/{submissionId}':
    get:
      tags:
        - Submissions
      summary: Get a submission by ID.
      parameters:
        - name: submissionId
          in: path
          description: Submission ID
          required: true
          type: integer
      responses:
        '200':
          description: Submission details.
          schema:
            type: object
            properties:
              issueId:
                type: integer
              issue:
                type: string
              section:
                type: string
              title:
                type: string
              subtitle:
                type: string
              authors:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/Author'
              pubIds:
                type: object
                properties:
                  doipubidplugin:
                    type: object
                    properties:
                      pubId: string
                      doiUrl: string
              abstract:
                type: string
              citations:
                type: object
              cover_image: string
              galleys:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/GalleyInSubmission'
              datePublished: string
  '/submissions/{submissionId}/files':
    get:
      tags:
        - Submissions
      summary: Get files attached to a submission.
      description: |
        Get all submission files attached to a submission. Optionally filter returned files by a file stage ID.
      parameters:
        - name: submissionId
          in: path
          description: Submission ID
          required: true
          type: integer
        - name: fileStage
          in: query
          description: File stage ID
          required: false
          type: integer
      responses:
        '200':
          description: Array of submission files.
          schema:
            type: array
            items:
              type: object
              $ref: '#/definitions/File'
        '404':
          description: Submission file could not be found.
          schema:
            type: object
            $ref: '#/definitions/ErrorResponse'
  '/submissions/{submissionId}/participants':
    get:
      tags:
        - Submissions
      summary: Get participants assigned to a submission.
      description: |
        Get all participants assigned to a submission. Optionally filter returned participants by a stage ID.
      parameters:
        - name: submissionId
          in: path
          description: Submission ID
          required: true
          type: integer
        - name: stageId
          in: query
          description: Stage ID
          required: false
          type: integer
          default: 1
      responses:
        '200':
          description: Array of users.
          schema:
            type: array
            items:
              type: object
              $ref: '#/definitions/User'
  '/submissions/{submissionId}/galleys':
    get:
      tags:
        - Submissions
      summary: Get submission galleys.
      description: |
        Get all of a submission's download galleys.
      parameters:
        - name: submissionId
          in: path
          description: Submission ID
          required: true
          type: integer
      responses:
        '200':
          description: Array of galleys.
          schema:
            type: array
            items:
              type: object
              $ref: '#/definitions/Galley'
        '400':
          description: Invalid stage ID
          schema:
            type: object
            $ref: '#/definitions/ErrorResponse'
  '/files/{fileId}':
    get:
      tags:
        - Files
      summary: Submission file download
      description: |
        Handle submission file download
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          type: integer
        - name: submissionId
          in: query
          description: Submission ID
          required: true
          type: integer
        - name: revision
          in: query
          description: Revision
          required: false
          type: integer
      responses:
        '200':
          description: binary file

  '/galleys/{representationId}':
    get:
      tags:
        - Galleys
      summary: Galley file download
      description: |
        Handle galley file download
      parameters:
        - name: representationId
          in: path
          description: Galley ID
          required: true
          type: integer
        - name: submissionId
          in: query
          description: Submission ID
          required: true
          type: integer
      responses:
        '200':
          description: binary file

  '/issues/':
    get:
      tags:
        - Issues
      summary: Issue listing
      description: |
        Get the issue listing
      parameters:
        - name: volume
          in: query
          description: Volume
          required: false
          type: integer
        - name: number
          in: query
          description: Volume
          required: false
          type: integer
        - name: year
          in: query
          description: Volume
          required: false
          type: integer
      responses:
        '200':
          description: array of issues

  '/issues/{issueId}':
    get:
      tags:
        - Issues
      summary: Issue details
      description: |
        Get information about a specific issue
      parameters:
        - name: issueId
          in: path
          description: Issue ID
          required: true
          type: integer
      responses:
        '200':
          description: issue metadata

  '/articles/{articleId}':
    get:
      tags:
        - Articles
      summary: Article details
      description: |
        Get information about a specific published article
      parameters:
        - name: articleId
          in: path
          description: Article ID
          required: true
          type: integer
      responses:
        '200':
          description: published article

  '/backend/submissions':
    get:
      tags:
        - Backend
      summary: Submission list
      description: |
        Retrieve submission list
      parameters:
        - name: orderColumn
          in: query
          description: Field to order by
          required: false
          type: string
          default: id
        - name: orderDirection
          in: query
          description: Order direction
          required: false
          type: string
          default: 'DESC'
        - name: assignedTo
          in: query
          description: Assignee user ID
          required: false
          type: integer
        - name: statuses
          in: query
          description: Status list
          required: false
          type: array
          items:
            type: integer
        - name: searchPhrase
          in: query
          description: Search phrase
          required: false
          type: string
        - name: count
          in: query
          description: Number of submission to return
          required: false
          type: integer
        - name: page
          in: query
          description: Page number for pagination
          required: false
          type: integer
      responses:
        '200':
          description: array of submissions

  '/backend/users':
    get:
      tags:
        - Backend
      summary: Users list
      description: |
        Retrieve user list
      parameters:
        - name: userGroupId
          in: query
          description: User group ID
          required: false
          type: integer
        - name: includeNoRole
          in: query
          description: Include users with no roles in this journal
          required: false
          type: boolean
          default: false
        - name: searchField
          in: query
          description: Search field
          required: false
          type: string
        - name: search
          in: query
          description: Search
          required: false
          type: string
        - name: searchMatch
          in: query
          description: Search match
          required: false
          type: string
          enum: ["is", "contains", "startsWith"]
      responses:
        '200':
          description: array of users
